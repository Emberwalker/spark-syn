buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
    }
}

apply plugin: 'org.junit.platform.gradle.plugin'

repositories {
    mavenCentral()
    maven { // Sonatype Snapshots (JUnit 5)
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
group = 'io.drakon.spark'
version = '0.0.3'

dependencies {
    // JSR305 (@Nullable annotations)
    compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'

    // Spark
    compile group: 'com.sparkjava', name: 'spark-core', version: '2.6.0'

    // Logging (SLF4j)
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    testRuntime group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    // JUnit
    testRuntime group: 'org.junit.platform', name: 'junit-platform-launcher', version: '1.0.0'
    testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.0.0'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.0.0'
    testCompile group: 'org.junit.vintage', name: 'junit-vintage-engine', version: '4.12.0'
}

task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourceJar
    archives javadocJar
}

// Maven
apply plugin: 'maven'

if (!project.hasProperty("DEPLOY_DIR")) {
    ext.DEPLOY_DIR = null
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file://${DEPLOY_DIR}")
        }
    }
}

uploadArchives.onlyIf { return DEPLOY_DIR != null }